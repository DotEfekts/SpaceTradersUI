@page "/routes/ships/{RouteId}"
@implements IDisposable
@inject AutoRouteProvider RouteProvider

<div class="layout-container">
    @if (!RouteProvider.RoutesLoaded())
    {
        <h3 class="body-title">Loading...</h3>
    }
    else if (route == null)
    {
        <h3 class="body-title">Invalid route id provided.</h3>
    }
    else
    {
        <h3 class="body-title">Auto Route Ships - @route.DisplayName</h3>
        <table class="ships">
            <thead>
                <tr>
                    <th>Ship Name</th>
                    <th>Last Command</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var ship in route.Ships)
                {
                    <tr>
                        <td>@ship.ShipData.DisplayName</td>
                        <td>@(ship.LastCommand == -1 ? "Route not started" : route.Commands.First(t => t.Index == ship.LastCommand).Command)</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    [Parameter]
    public string RouteId { get; set; }
    private AutoRoute route = null;

    protected override void OnInitialized()
    {
        RouteProvider.RoutesUpdated += RoutesUpdated;
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        UpdateRouteData();
        base.OnParametersSet();
    }

    public void Dispose()
    {
        RouteProvider.RoutesUpdated -= RoutesUpdated;
    }

    private void RoutesUpdated(object sender, RouteEventArgs args)
    {
        UpdateRouteData();
        StateHasChanged();
    }

    private void UpdateRouteData()
    {
        if (RouteProvider.RoutesLoaded())
            if (int.TryParse(RouteId, out int routeId))
                route = RouteProvider.GetRoute(routeId);
    }
}