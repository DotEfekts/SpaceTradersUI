@page "/routes"
@implements IDisposable
@inject AutoRouteProvider RouteProvider 

<div class="layout-container">
    @if (!RouteProvider.RoutesLoaded())
    {
        <h3 class="body-title">Loading...</h3>
    }
    else if (!RouteProvider.HasRoutes())
    {
        <h3 class="body-title">You have not created any routes.</h3>
    }
    else
    {
        <h3 class="body-title">Auto Routes</h3>
        <table class="ships">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Commands in Route</th>
                    <th>Ships on Route</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var routeData in RouteProvider.GetRouteData())
                {
                    <tr>
                        <td>@routeData.Id</td>
                        <td>@routeData.DisplayName</td>
                        <td>@routeData.Commands.Length</td>
                        <td>@routeData.Ships.Length</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    protected override void OnInitialized()
    {
        RouteProvider.RoutesUpdated += RoutesUpdated;
        base.OnInitialized();
    }

    public void Dispose()
    {
        RouteProvider.RoutesUpdated -= RoutesUpdated;
    }

    private void RoutesUpdated(object sender, RouteEventArgs args)
    {
        StateHasChanged();
    }
}